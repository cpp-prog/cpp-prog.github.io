<h1>Пользовательские литералы</h1>

<p>Пользовательские литералы реализуются с помощью перегрузки оператора <code>operator&quot;&quot;</code>. Литералы могут быть с квалификатором <tt>inline</tt> или <tt>constexpr</tt>. Желательно, чтобы литерал начинался с символа нижнего подчёркивания, так как может возникнуть коллизия с будущими стандартами. Например, литерал i уже принадлежит комплексным числам из <code>std::complex</code>.</p>

<p>Литералы могут принимать только один из следующих типов: <code>const char * , unsigned long long int , long double , char , wchar_t , char16_t , char32_t</code>. Достаточно перегрузить литерал только для типа <tt>const char *</tt>. Если не найдено более подходящего кандидата, то будет вызван оператор с этим типом. Пример преобразования миль в километры:</p>

<pre>
<code>constexpr int operator &quot;&quot; _mi (unsigned long long int i)
{ return 1.6 * i;}
</code></pre>

<p>Строковые литералы принимают вторым аргументом <code>std::size_t</code>, а первым один из: <code>const char * , const wchar_t *, const char16_t * , const char32_t *</code>. Строковые литералы применяются к записям, записанным в двойных кавычках.</p>
