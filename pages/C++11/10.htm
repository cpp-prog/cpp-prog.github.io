<h1>Спецификаторы default и delete</h1>

<p>Спецификаторы default и delete можно указывать вместо тела метода.</p>

<pre>
<code>class Foo
{
public:
    Foo() = default;
    Foo(int x) {/* ... */}
};</code>
</pre>

<p>Спецификатор <code>default</code> означает реализацию по умолчанию и может применяться только к специальным функциям-членам:</p>

<ul>
	<li>конструктор по-умолчанию;</li>
	<li>конструктор копий;</li>
	<li>конструктор перемещения;</li>
	<li>оператор присваивания;</li>
	<li>оператор перемещения;</li>
	<li>деструктор.</li>
</ul>

<p>Спецификатор <code>delete</code> помечают те методы, работать с которыми нельзя. Раньше приходилось объявлять такие конструкторы в приватной области класса.</p>

<pre>
<code>class Foo
{
public:
    Foo() = default;
    Foo(const Foo&amp;) = delete;
    void bar(int) = delete;
    void bar(double) {}
};
// ...
Foo obj;
obj.bar(5);     // ошибка!
obj.bar(5.42);  // ok</code>
</pre>
