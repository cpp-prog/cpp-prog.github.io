<h1>Снятие ограничений с union</h1>

<p>В предыдущих стандартах C++ существует ряд ограничений по использованию элементов классовых типов внутри объединений. В частности, объединения не могут содержать объекты с нетривиальным конструктором. C++11 снимает часть таких ограничений.</p>

<p>Вот простой пример объединения, разрешённого в С++11:</p>

<pre>
<code>//для placement new
#include &lt;new&gt;

struct Point  {
    Point() {}
    Point(int x, int y): x_(x), y_(y) {}
    int x_, y_;
};
union U {
    int z;
    double w;
    Point p;  // Неверно для C++03, поскольку Point имеет нетривиальный конструктор.  Однако код работает корректно в C++11.
    U() { new( &amp;p ) Point(); } // Для объединения не определяются нетривиальные методы.
                               // При необходимости они могут быть удалены, чтобы работало ручное определение
};</code>
</pre>

<p>Изменения не затрагивают существующий код, поскольку лишь ослабляют существующие ограничения.</p>
